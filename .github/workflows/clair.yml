# This is a basic workflow to help you get started with Actions

name: Clair

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup Clair
        run: |
          sudo apt install docker-compose -y
          mkdir -p clair/docker-compose-data/clair-config
          wget https://raw.githubusercontent.com/jgsqware/clairctl/master/docker-compose.yml --directory-prefix=clair/docker-compose-data/
          wget https://raw.github.com/jgsqware/clairctl/master/docker-compose-data/clair-config/config.yml --directory-prefix=clair/clair-config/
          cd clair/docker-compose-data
          docker-compose up&
          
      - name: Setup Container to scan
        run: |
          docker build -t pygoat:1.0 .

      # Runs a set of commands using the runners shell
      - name: Run Clair scan
        run: |
          docker-compose exec clairctl clairctl analyze -l pygoat:1.0
          
      - name: Generate and export results
        run: |
          docker-compose exec clairctl clairctl report -l pygoat:1.0
          docker cp clairctl:/var/logs/ results
          
      - name: Archive generated results
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: results
